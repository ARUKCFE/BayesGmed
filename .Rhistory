try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("roxygen2")
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("Rcpp")
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("roxygen2")
library(devtools)
install.packages("devtools")
bayes_gmed_test <- function(dist.y = "continuous", dist.m ="continuous",
link.y ="identity", link.m ="identity",
treat.value = 1, priors = NULL, ...){
# Check priors
default_priors <- list(
scale_m = 2.5, scale_y = 2.5,
location_m = 0, location_y = 0,
scale_sd_y = 2.5, scale_sd_m = 2.5
)
if (is.null(priors$scale_m)) priors$scale_m <- default_priors$scale_m
if (is.null(priors$scale_y)) priors$scale_y <- default_priors$scale_y
if (is.null(priors$location_m)) priors$location_m <- default_priors$location_m
if (is.null(priors$location_y)) priors$location_y <- default_priors$location_y
if (is.null(priors$scale_sd_y)) priors$scale_sd_y <- default_priors$scale_sd_y
if (is.null(priors$scale_sd_m)) priors$scale_sd_m <- default_priors$scale_sd_m
return(priors)
}
bayes_gmed_test()
bayes_gmed_test(priors = list(location_m = 0, location_y=3))
bayes_gmed_test <- function(dist.y = "continuous", dist.m ="continuous",
link.y ="identity", link.m ="identity",
treat.value = 1, priors = NULL, ...){
# Check priors
default_priors <- list(
scale_m = 2.5, scale_y = 2.5,
location_m = 0, location_y = 0,
scale_sd_y = 2.5, scale_sd_m = 2.5
)
if (is.null(priors$scale_m)) priors$scale_m <- default_priors$scale_m
if (is.null(priors$scale_y)) priors$scale_y <- default_priors$scale_y
if (is.null(priors$location_m)) priors$location_m <- default_priors$location_m
if (is.null(priors$location_y)) priors$location_y <- default_priors$location_y
if (dist.y = "continuous"& is.null(priors$scale_sd_y)) priors$scale_sd_y <- default_priors$scale_sd_y
bayes_gmed_test <- function(dist.y = "continuous", dist.m ="continuous",
link.y ="identity", link.m ="identity",
treat.value = 1, priors = NULL, ...){
# Check priors
default_priors <- list(
scale_m = 2.5, scale_y = 2.5,
location_m = 0, location_y = 0,
scale_sd_y = 2.5, scale_sd_m = 2.5
)
if (is.null(priors$scale_m)) priors$scale_m <- default_priors$scale_m
if (is.null(priors$scale_y)) priors$scale_y <- default_priors$scale_y
if (is.null(priors$location_m)) priors$location_m <- default_priors$location_m
if (is.null(priors$location_y)) priors$location_y <- default_priors$location_y
if (dist.y == "continuous"& is.null(priors$scale_sd_y)) priors$scale_sd_y <- default_priors$scale_sd_y
if (dist.m == "continuous" & is.null(priors$scale_sd_m)) priors$scale_sd_m <- default_priors$scale_sd_m
return(priors)
}
bayes_gmed_test()
bayes_gmed_test(dist.y == "binary")
bayes_gmed_test(dist.y = "binary")
bayes_gmed_test(dist.y = "binary", dist.m = "binary")
library(rstantools)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
pkgbuild::compile_dll()
roxygen2::roxygenize()
pkgbuild::compile_dll()
roxygen2::roxygenize()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
devtools::install()
library(devtools)
install.packages("devtools")
devtools::install()
library(BayesGmed)
?bayes_gmed
